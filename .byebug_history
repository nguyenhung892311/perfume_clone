c
request.headers["Authorization"]
headers["Authorization"]
header
c
request.headers["Authorization"]
header
SECRET_KEY
token
tokem
params
c
JWT.decode(jwt)
JWT.decode(jwt, Rails.application.config.jwt_secret, true, algorithm: 'HS256')
User.find(decoded[0])
User.find(decoded[0]
User.find(decoded)
User.find(decoded[0]['user_id'])
request.headers['Authorization']
c
 request.headers['Authorization']
c
request.headers['Authorization']
c
current_user
9current_user
c
User.is_client?
c
@admin_user
current_user == @admin_user
current_user
c
current_user
@admin_user
c
resource.save!
resource.type = "Admin"
resource
resource.is_client?
resource.is_admin?
c
current_user
@current_user
skip
 current_user
skip
c
@current_user
c
current_user
c
current_user
curent_user
skip
c
@current_user
current_user
c
current_user
current_admin
c
user
@current_user
c@current_user
skip
c
Current.user
current_user
c
valid?
c
self.count
article
@article
self
c
create_article
valid?
skip
User.find(params[:id]).decorate
@admin_user
skip
n
User.find(params[:id]).decorate
c
update_user
c
self.error
self.valid?
valid?
c
params
c
@params.require(:user_create_form)
c
@params[:user_create_form]
@params
params[:authenticity_token]
params
c
params
@params
c
params
params['user_create_form']
params["user_create_form"]
params[:user_create_form]
params[:user_create_form][:name]
params[:name]
pp params
params
c
params.require(:user)
params.require
params.require(:user).permit(:name, :password, :password_confirmation ,:phone, :birthday, :address, :status, :gender, :email, :type, :image)
params[:user_create_form]
params
exit
params
c
params
c
create_article
self.valid?
self
c
 @article_form = Article::UpdateForm.new(params)
params
@params
create_user
valid?
c
create_user
valid?
c
User.all
Admin::User
c
@params
c
@params
c
@params
params
]
c
@params
c@params
c
 @admin_user.image
@admin_user
c
@admin_user.name
@admin_user = User.find(params[:id]).decorate
 @admin_user.name
c
 @admin_user.object.name
 @admin_user.name
@admin_user = User.find(params[:id]).decorate
 User.find(params[:id]).decorate
c
current_user.id
c
current_user.id
current_user
c
resource.class
resource
skip
resource.is_client?
resource
c
cc
c
skip
s
c
resource.is_client?
resource.is_client
resource.class
resource
c
f.object.images.to_s
